name: Eco Routes Support Deploy
on: [push]

jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: ".nvmrc"
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1 
    - name: Verify Installation
      run: forge --version
    - name: Build Forge Project
      run: forge build  
  # deploy:
  #   name: Deploy Contracts
  #   needs: prepack
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download build artifact from prepack job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: workspace
  #         path: .
  #     - name: List Files
  #       run: ls -R
  #     - uses: actions/setup-node@v4.1.0
  #       with:
  #         node-version-file: ".nvmrc"
  #         cache: "yarn"
  #     - name: ‚ö° Install Foundry
  #       uses: foundry-rs/foundry-toolchain@v1
  #     - name: üîç Verify Installation
  #       run: forge --version
  #     - name: üîß Install Forge Dependencies
  #       run: forge install
  #     - name: üîß Grant Execute Permission to MultiDeploy.sh
  #       run: chmod +x scripts/MultiDeploy.sh
  #     - name: üîß Grant Execute Permission to OwnableExecutor.sh
  #       run: chmod +x scripts/OwnableExecutor.sh
  #     - name: üîß Grant Execute Permission to Verify.sh
  #       run: chmod +x scripts/Verify.sh
  #     - name: Install dependencies
  #       uses: borales/actions-yarn@v5
  #       with:
  #         cmd: install
  #     - name: üîÑ Deploy OwnableExecutor.sh
  #       run: ./scripts/OwnableExecutor.sh
  #     - name: üîÑ Deploy Contracts
  #       uses: borales/actions-yarn@v5
  #       with:
  #         cmd: deployForgeCI
  #       env:
  #         PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
  #         CHAIN_IDS: "1,10,137,5000,8453,42161,84532,11155111,11155420"

  #         # Etherscan API Keys
  #         ETHERSCAN_API_KEY_1: ${{ secrets.ETHERSCAN_API_KEY }}
  #         ETHERSCAN_API_KEY_10: ${{ secrets.OPTIMISM_SCAN_API_KEY }}
  #         ETHERSCAN_API_KEY_137: ${{ secrets.POLYGON_SCAN_API_KEY }}
  #         ETHERSCAN_API_KEY_5000: ${{ secrets.MANTLE_SCAN_API_KEY }}
  #         ETHERSCAN_API_KEY_8453: ${{ secrets.BASE_SCAN_API_KEY }}
  #         ETHERSCAN_API_KEY_42161: ${{ secrets.ARBSCAN_API_KEY }}
  #         # Testnets
  #         ETHERSCAN_API_KEY_84532: ${{ secrets.BASE_SCAN_API_KEY }}
  #         ETHERSCAN_API_KEY_11155111: ${{ secrets.ETHERSCAN_API_KEY }}
  #         ETHERSCAN_API_KEY_11155420: ${{ secrets.OPTIMISM_SCAN_API_KEY }}

  #         # Gas Multipliers
  #         GAS_MULTIPLIER_5000: "600"

  #     - name: Build project
  #       uses: borales/actions-yarn@v5
  #       with:
  #         cmd: build
  #     - name: Publish prepack build directory
  #       uses: borales/actions-yarn@v5
  #       with:
  #         cmd: pub:prepack
  #     - name: Upload Build Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: build
  #         path: |
  #           ./build
  #         retention-days: 1
  # publish:
  #   name: Publish to NPM
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     id-token: write
  #   steps:
  #     - uses: actions/checkout@v4.2.2
  #     - uses: actions/setup-node@v4.1.0
  #       with:
  #         node-version-file: ".nvmrc"
  #         cache: "yarn"
  #     - name: Download build artifact from buildAndTest job
  #       uses: actions/download-artifact@v4
  #     - name: List Files
  #       run: ls -R
  #     - name: Install dependencies
  #       uses: borales/actions-yarn@v5
  #       with:
  #         cmd: install
  #     - name: Publish to NPM
  #       uses: borales/actions-yarn@v5
  #       with:
  #         cmd: pub:publish # will run `yarn publish` command with args
  #       env:
  #         NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # npm registry
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # scope registry
